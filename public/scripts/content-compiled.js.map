{"version":3,"sources":["content.js"],"names":[],"mappings":"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","file":"content-compiled.js","sourcesContent":["/**\r\n * Created by Vetal on 01.02.2016.\r\n */\r\n\r\nvar Grid = ReactBootstrap.Grid;\r\nvar Row = ReactBootstrap.Row;\r\nvar Col = ReactBootstrap.Col;\r\nvar Tab = ReactBootstrap.Tab;\r\nvar Tabs = ReactBootstrap.Tabs;\r\nvar Button = ReactBootstrap.Button;\r\nvar Navbar = ReactBootstrap.Navbar;\r\nvar NavItem = ReactBootstrap.NavItem;\r\nvar Nav = ReactBootstrap.Nav;\r\nvar Panel = ReactBootstrap.Panel;\r\nvar Carousel = ReactBootstrap.Carousel;\r\nvar CarouselItem = ReactBootstrap.CarouselItem;\r\n\r\n//*  Общая структура: в PageContent отрисовывается Панель + EndlessScroll с параметрами карточек *//\r\n//*  В EndlessScroll отрисовываются  <Row>Cards</Row> По параметру *//\r\n//* Карточка коллекции - по параметрам отрисовывается *//\r\n//TODO: вынести в отдельный скрипт и не прописывать отдельно на каждой странице.\r\n\r\nvar Card = React.createClass({\r\n    render: function () {\r\n        return (\r\n            <Panel>\r\n                <Image src=\"example.jpg\" responsive/>\r\n            </Panel>\r\n        )\r\n    }\r\n});\r\n\r\nvar EndlessScroll = React.createClass({\r\n\r\n    render: function () {\r\n        return <div>\r\n            {this.props.data};\r\n        </div>\r\n    }\r\n});\r\n\r\n\r\nvar PageContent = React.createClass({\r\n    // Изначально отрисовываем лучшии коллекции\r\n    getInitialState: function () {\r\n        return {\r\n            bestActive: true,\r\n            BestCards: [<Card id={1}/>],\r\n            MyCards: [<Card id={2}/>, <Card id={3}/>]\r\n        }\r\n    },\r\n    //Хендлер нажатия лучших коллекций\r\n    //Если не активна, то сделаем активной\r\n    handleBest: function () {\r\n        if (!this.state.bestActive) {\r\n            this.setState(function () {\r\n                return {bestActive: true};\r\n            })\r\n        }\r\n    },\r\n    //Хендлер нажатия моих коллекций\r\n    //-||-\r\n    handleMy: function () {\r\n        if (this.state.bestActive) {\r\n            this.setState(function () {\r\n                return {bestActive: false};\r\n            })\r\n        }\r\n    },\r\n    //Хендлер нажатия кнопки создать\r\n    handleCreate: function () {\r\n    },\r\n    render: function () {\r\n        var bestText = \"Лучшие Коллекции\";\r\n        var myText = \"Мои Коллекции\";\r\n        if (this.state.bestActive) {\r\n            bestText = <u>{bestText}</u>;\r\n        } else {\r\n            myText = <u>{myText}</u>;\r\n        }\r\n        return (\r\n            <Grid>\r\n                <Row>\r\n                    <Col md={12} xs={12}>\r\n                        <Navbar id=\"17\">\r\n                            <Navbar.Collapse>\r\n                                <Nav>\r\n                                    <NavItem eventKey={1} onClick={this.handleBest}>{bestText}</NavItem>\r\n                                    <NavItem eventKey={2} onClick={this.handleMy}>{myText}</NavItem>\r\n                                </Nav>\r\n                                <Navbar.Form>\r\n                                    <Button bsStyle=\"success\"\r\n                                            onClick={this.handleCreate}\r\n                                            bsSize=\"small\">Создать Коллекцию</Button>\r\n                                </Navbar.Form>\r\n                            </Navbar.Collapse>\r\n                        </Navbar>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} xs={6}>\r\n                        <EndlessScroll data={this.state.bestActive?this.state.BestCards:this.state.MyCards}/>\r\n                    </Col>\r\n                    <Col md={2} xs={2}>\r\n                    </Col>\r\n                    <Col md={4} xs={4}>\r\n                        <Card/>\r\n                        <Card />\r\n                        <Card />\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n        )\r\n    }\r\n});\r\n\r\n\r\nReactDOM.render(\r\n    <PageContent />\r\n    , document.getElementById(\"content\"));"]}